AWSTemplateFormatVersion: '2010-09-09'
Description: Import an existing SageMaker Studio Domain into a new stack and apply MLops execution role permission to the domain

Parameters:
  SageMakerStudioVPCOnlyDomain:
    Type: String
    Description: The ID of the existing SageMaker Studio Domain to import

Resources:
  ImportedDomain:
    Type: AWS::SageMaker::Domain
    Properties:
      DomainId: !Ref SageMakerStudioVPCOnlyDomain #ExistingDomainId is the ID of the existing sagemaker studio domain you want to import
      AuthMode: IAM
      DefaultUserSettings:
        ExecutionRole: !GetAtt DomainExecutionRole.Arn
      
  DomainExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AWSLambdaFullAccess'
      - 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess'
      - 'arn:aws:iam::aws:policy/CloudWatchFullAccess'
      - 'arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess'
      - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
  SagemakerPipelineManagement:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerPipelineManagement
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #pipeline related permissions
                - 'sagemaker:CreatePipeline'
                - 'sagemaker:StartPipelineExecution'
                - 'sagemaker:StopPipelineExecution'
                - 'sagemaker:RetryPipelineExecution'
                - 'sagemaker:UpdatePipelineExecution'
                - 'sagemaker:SendPipelineExecutionStepSuccess'
                - 'sagemaker:SendPipelineExecutionStepFailure'
                - 'sagemaker:DescribePipeline'
                - 'sagemaker:DescribePipelineExecution'
                - 'sagemaker:DescribePipelineDefinitionForExecution'
                - 'sagemaker:DeletePipeline'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*'
            - Effect: Allow
              Action: 
                - 'sagemaker:ListPipelines'
                - 'sagemaker:ListPipelineExecutions'
                - 'sagemaker:ListPipelineExecutionSteps'
                - 'sagemaker:ListPipelineParametersForExecution'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'iam:PassRole'
              Resource:
                 - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
              Condition: 
                StringEquals: 
                  iam:PassedToService: sagemaker.amazonaws.com
      Roles:
        - !Ref DomainExecutionRole          
  SagemakerModelMonitoring:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerModelMonitoring
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #Model monitoring related permissions
                - 'sagemaker:CreateMonitoringSchedule'
                - 'sagemaker:UpdateMonitoringSchedule'
                - 'sagemaker:DescribeMonitoringSchedule'
                - 'sagemaker:DeleteMonitoringSchedule'
                - 'sagemaker:StartMonitoringSchedule'
                - 'sagemaker:StopMonitoringSchedule'
                - 'sagemaker:CreateProcessingJob'
                - 'sagemaker:DescribeProcessingJob'
                - 'sagemaker:StopProcessingJob'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*' 
            - Effect: Allow
              Action:
                - 'sagemaker:ListMonitoringSchedules'
                - 'sagemaker:ListProcessingJobs'
              Resource: "*" 
            - Effect: Allow
              Action:
              - 'iam:PassRole'
              Resource:
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
              Condition: 
                StringEquals: 
                  iam:PassedToService: sagemaker.amazonaws.com 
      Roles:
        - !Ref DomainExecutionRole               
  SagemakerModelManagement:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerModelManagement
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #Model management
                - 'sagemaker:CreateModel'
                - 'sagemaker:CreateModelPackage'
                - 'sagemaker:CreateModelPackageGroup'
                - 'sagemaker:DescribeModel'
                - 'sagemaker:DescribeModelPackage'
                - 'sagemaker:DescribeModelPackageGroup'
                - 'sagemaker:BatchDescribeModelPackage'
                - 'sagemaker:UpdateModelPackage'
                - 'sagemaker:DeleteModel'
                - 'sagemaker:DeleteModelPackage'
                - 'sagemaker:DeleteModelPackageGroup'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*' 
            - Effect: Allow
              Action: #Model management
                - 'sagemaker:ListModels'
                - 'sagemaker:ListModelPackages'
                - 'sagemaker:ListModelPackageGroups'
              Resource: "*" 
            - Effect: Allow
              Action:
              - 'iam:PassRole'
              Resource:
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
              Condition: 
                StringEquals: 
                  iam:PassedToService: sagemaker.amazonaws.com
      Roles:
        - !Ref DomainExecutionRole              
  SagemakerExperiment:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerExperiment
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #Experments visualization
                - 'sagemaker:DescribeAction'
                - 'sagemaker:DescribeArtifact'
                - 'sagemaker:DescribeContext'
                - 'sagemaker:DescribeExperiment'
                - 'sagemaker:DescribeTrial'
                - 'sagemaker:DescribeTrialComponent'
                - 'sagemaker:DescribeLineageGroup'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*' 
            - Effect: Allow
              Action: 
                - 'sagemaker:ListAssociations'
                - 'sagemaker:ListActions'
                - 'sagemaker:ListArtifacts'
                - 'sagemaker:ListContexts'
                - 'sagemaker:ListExperiments'
                - 'sagemaker:ListTrials'
                - 'sagemaker:ListTrialComponents'
                - 'sagemaker:ListLineageGroups'
                - 'sagemaker:GetLineageGroupPolicy'
                - 'sagemaker:QueryLineage'
                - 'sagemaker:Search'
                - 'sagemaker:GetSearchSuggestions'
              Resource: "*" 
      Roles:
        - !Ref DomainExecutionRole 
  SagemakerProcessing:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerProcessing
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #Sagemaker Processing
                - 'sagemaker:CreateTrainingJob'
                - 'sagemaker:CreateTransformJob'
                - 'sagemaker:CreateProcessingJob'
                - 'sagemaker:CreateAutoMLJob'
                - 'sagemaker:CreateHyperParameterTuningJob'
                - 'sagemaker:StopTrainingJob'
                - 'sagemaker:StopProcessingJob'
                - 'sagemaker:StopAutoMLJob'
                - 'sagemaker:StopHyperParameterTuningJob'
                - 'sagemaker:DescribeTrainingJob'
                - 'sagemaker:DescribeTransformJob'
                - 'sagemaker:DescribeProcessingJob'
                - 'sagemaker:DescribeAutoMLJob'
                - 'sagemaker:DescribeHyperParameterTuningJob'
                - 'sagemaker:UpdateTrainingJob'
                - 'sagemaker:BatchGetMetrics'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*' 
            - Effect: Allow
              Action: 
                - 'sagemaker:Search'
                - 'sagemaker:ListTrainingJobs'
                - 'sagemaker:ListTransformJobs'
                - 'sagemaker:ListProcessingJobs'
                - 'sagemaker:ListAutoMLJobs'
                - 'sagemaker:ListCandidatesForAutoMLJob'
                - 'sagemaker:ListHyperParameterTuningJobs'
                - 'sagemaker:ListTrainingJobsForHyperParameterTuningJob'
              Resource: "*"
            - Effect: Allow
              Action:
              - 'iam:PassRole'
              Resource:
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
              Condition: 
                StringEquals: 
                  iam:PassedToService: sagemaker.amazonaws.com
      Roles:
        - !Ref DomainExecutionRole       
  SagemakerEndpoint:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerEndpoint
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #Endpoint configuration
                - 'sagemaker:CreateEndpointConfig'
                - 'sagemaker:CreateEndpoint'
                - 'sagemaker:DeleteEndpointConfig'
                - 'sagemaker:DeleteEndpoint'
                - 'sagemaker:UpdateEndpoint'
                - 'sagemaker:UpdateEndpointWeightsAndCapacities'
                - 'sagemaker:DescribeEndpoint'
                - 'sagemaker:DescribeEndpointConfig'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*' 
            - Effect: Allow
              Action: 
                - 'sagemaker:ListEndpoints'
                - 'sagemaker:ListEndpointConfigs'
              Resource: "*" 
      Roles:
        - !Ref DomainExecutionRole
  SageMakerMLStudioAppPermissionPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: 'SageMaker_MLStudioAppPermission_Policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'SMStudioUserProfileAppPermissionsCreateAndDelete'
            Effect: 'Allow'
            Action:
              - 'sagemaker:CreateApp'
              - 'sagemaker:DeleteApp'
            Resource:
              - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:app/*'
            Condition:
              'Null': #review this condition in case stack fails
                sagemaker:OwnerUserProfileArn: 'false'
          - Sid: 'SMStudioCreatePresignedDomainUrlForUserProfile'
            Effect: 'Allow'
            Action:
              - 'sagemaker:CreatePresignedDomainUrl'
            Resource: 
              # - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}'
              - Fn::Join:
                  - ""
                  - - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/'
                    - "${sagemaker:DomainId}/${sagemaker:UserProfileName}"
          - Sid: 'SMStudioAppPermissionsListAndDescribe'
            Effect: 'Allow'
            Action:
              - 'sagemaker:ListApps'
              - 'sagemaker:ListDomains'
              - 'sagemaker:ListUserProfiles'
              - 'sagemaker:ListSpaces'
              - 'sagemaker:DescribeApp'
              - 'sagemaker:DescribeDomain'
              - 'sagemaker:DescribeUserProfile'
              - 'sagemaker:DescribeSpace'
            Resource: 
              - '*'
          - Sid: 'SMStudioAppPermissionsTagOnCreate'
            Effect: 'Allow'
            Action:
              - 'sagemaker:AddTags'
            Resource:
              - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*/*'
            Condition:
              'Null':
                sagemaker:TaggingAction: 'false'
          - Sid: 'SMStudioRestrictSharedSpacesWithoutOwners'
            Effect: 'Allow'
            Action:
              - 'sagemaker:CreateSpace'
              - 'sagemaker:UpdateSpace'
              - 'sagemaker:DeleteSpace'
            Resource: 
              # - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:space/${sagemaker:DomainId}/*'
              - Fn::Join:
                  - ""
                  - - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:space/'
                    - "${sagemaker:DomainId}/*"
            Condition:
              'Null': #review this condition statement if stack fails
                sagemaker:OwnerUserProfileArn: 'false' 
          - Sid: 'SMStudioRestrictSpacesToOwnerUserProfile'
            Effect: 'Allow'
            Action:
              - 'sagemaker:CreateSpace'
              - 'sagemaker:UpdateSpace'
              - 'sagemaker:DeleteSpace'
            Resource: 
              # - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:space/${sagemaker:DomainId}/*'
              - Fn::Join:
                  - ""
                  - - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:space/'
                    - "${sagemaker:DomainId}/*"
            Condition:
              ArnLike:
                sagemaker:OwnerUserProfileArn: 
                  # - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}'
                  - Fn::Join:
                    - ""
                    - - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/'
                      - "${sagemaker:DomainId}/*"
              StringEquals:
                sagemaker:SpaceSharingType:
                  - 'Private'
                  - 'Shared' 

          - Sid: 'SMStudioRestrictCreatePrivateSpaceAppsToOwnerUserProfile'
            Effect: 'Allow'
            Action:
              - 'sagemaker:CreateApp'
              - 'sagemaker:DeleteApp'
            Resource: 
              # - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:app/${sagemaker:DomainId}/*'
              - Fn::Join:
                  - ""
                  - - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:app/'
                    - "${sagemaker:DomainId}/*"
            Condition:
              ArnLike:
                sagemaker:OwnerUserProfileArn: 
                  # - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}'
                  - Fn::Join:
                    - ""
                    - - !Sub 'arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:user-profile/'
                      - "${sagemaker:DomainId}/${sagemaker:UserProfileName}"
              StringEquals:
                sagemaker:SpaceSharingType:
                  - 'Private'
          - Sid: 'AllowAppActionsForSharedSpaces'
            Effect: 'Allow'
            Action:
              - 'sagemaker:CreateApp'
              - 'sagemaker:DeleteApp'
            Resource: 'arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*'
            Condition:
              StringEquals:
                sagemaker:SpaceSharingType:
                  - 'Shared'
      Roles:
        - !Ref DomainExecutionRole                                   
  NewUserProfile:
    Type: AWS::SageMaker::UserProfile
    Properties:
      DomainId: !Ref SageMakerStudioVPCOnlyDomain
      UserProfileName: NewUserProfile
      UserSettings:
        ExecutionRole: !GetAtt DomainExecutionRole.Arn
Outputs:
  ImportedDomainId:
    Description: The ID of the imported SageMaker Studio Domain
    Value: !Ref ImportedDomain
  
  NewSageMakerExecutionRole:
    Description: "SageMaker MLOps Role"
    Value: !Ref DomainExecutionRole
  
  SageMakerDomainUrl:
    Value: !Join
      - ''
      - - 'https://console.aws.amazon.com/sagemaker/home?region='
        - !Ref 'AWS::Region'
        - '#/studio/'
        - !Ref SageMakerStudioVPCOnlyDomain
    Description: URL to access the SageMaker Domain