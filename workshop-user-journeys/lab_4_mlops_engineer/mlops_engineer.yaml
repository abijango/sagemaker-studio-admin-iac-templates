AWSTemplateFormatVersion: '2010-09-09'
Description: Import an existing SageMaker Studio Domain into a new stack and apply MLops execution role permission to the domain

Parameters:
  SageMakerStudioVPCOnlyDomain:
    Type: String
    Description: The ID of the existing SageMaker Studio Domain to import

Resources:
  ImportedDomain:
    Type: AWS::SageMaker::Domain
    Properties:
      DomainId: !Ref SageMakerStudioVPCOnlyDomain #ExistingDomainId is the ID of the existing sagemaker studio domain you want to import
      AuthMode: IAM
      DefaultUserSettings:
        ExecutionRole: !GetAtt DomainExecutionRole.Arn
      
  DomainExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
  SagemakerPipelineManagement:
    Type: AWS::IAM::Policy
    Properties:    
      PolicyName: SagemakerPipelineManagement
      PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: #pipeline related permissions
                - 'sagemaker:CreatePipeline'
                - 'sagemaker:StartPipelineExecution'
                - 'sagemaker:StopPipelineExecution'
                - 'sagemaker:RetryPipelineExecution'
                - 'sagemaker:UpdatePipelineExecution'
                - 'sagemaker:SendPipelineExecutionStepSuccess'
                - 'sagemaker:SendPipelineExecutionStepFailure'
                - 'sagemaker:DescribePipeline'
                - 'sagemaker:DescribePipelineExecution'
                - 'sagemaker:DescribePipelineDefinitionForExecution'
                - 'sagemaker:DeletePipeline'
              Resource:
                - 'arn:aws:sagemaker:*:*:*/*'
            - Effect: Allow
              Action: 
                - 'sagemaker:ListPipelines'
                - 'sagemaker:ListPipelineExecutions'
                - 'sagemaker:ListPipelineExecutionSteps'
                - 'sagemaker:ListPipelineParametersForExecution'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'iam:PassRole'
              Resource:
                 - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
              Condition: 
                StringEquals: 
                  iam:PassedToService: sagemaker.amazonaws.com
      Roles:
        - !Ref DomainExecutionRole          
  SagemakerModelMonitoring:
      Type: AWS::IAM::Policy
      Properties:    
        PolicyName: SagemakerModelMonitoring
        PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: #Model monitoring related permissions
                  - 'sagemaker:CreateMonitoringSchedule'
                  - 'sagemaker:UpdateMonitoringSchedule'
                  - 'sagemaker:DescribeMonitoringSchedule'
                  - 'sagemaker:DeleteMonitoringSchedule'
                  - 'sagemaker:StartMonitoringSchedule'
                  - 'sagemaker:StopMonitoringSchedule'
                  - 'sagemaker:CreateProcessingJob'
                  - 'sagemaker:DescribeProcessingJob'
                  - 'sagemaker:StopProcessingJob'
                Resource:
                  - 'arn:aws:sagemaker:*:*:*/*' 
              - Effect: Allow
                Action:
                  - 'sagemaker:ListMonitoringSchedules'
                  - 'sagemaker:ListProcessingJobs'
                Resource: "*" 
              - Effect: Allow
                Action:
                - 'iam:PassRole'
                Resource:
                 - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
                Condition: 
                  StringEquals: 
                    iam:PassedToService: sagemaker.amazonaws.com 
      Roles:
        - !Ref DomainExecutionRole               
  SagemakerModelManagement:
      Type: AWS::IAM::Policy
      Properties:    
        PolicyName: SagemakerModelManagement
        PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: #Model management
                  - 'sagemaker:CreateModel'
                  - 'sagemaker:CreateModelPackage'
                  - 'sagemaker:CreateModelPackageGroup'
                  - 'sagemaker:DescribeModel'
                  - 'sagemaker:DescribeModelPackage'
                  - 'sagemaker:DescribeModelPackageGroup'
                  - 'sagemaker:BatchDescribeModelPackage'
                  - 'sagemaker:UpdateModelPackage'
                  - 'sagemaker:DeleteModel'
                  - 'sagemaker:DeleteModelPackage'
                  - 'sagemaker:DeleteModelPackageGroup'
                Resource:
                  - 'arn:aws:sagemaker:*:*:*/*' 
              - Effect: Allow
                Action: #domain related permissions
                  - 'sagemaker:ListModels'
                  - 'sagemaker:ListModelPackages'
                  - 'sagemaker:ListModelPackageGroups'
                Resource: "*" 
              - Effect: Allow
                Action:
                - 'iam:PassRole'
                Resource:
                 - !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${AWS::StackName}-${SageMakerStudioVPCOnlyDomain}-MLOps-Role"
                Condition: 
                  StringEquals: 
                    iam:PassedToService: sagemaker.amazonaws.com
      Roles:
        - !Ref DomainExecutionRole              
  SagemakerExperiment:
      Type: AWS::IAM::Policy
      Properties:    
        PolicyName: SagemakerExperiment
        PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: #Experments visualization
                  - 'sagemaker:DescribeAction'
                  - 'sagemaker:DescribeArtifact'
                  - 'sagemaker:DescribeContext'
                  - 'sagemaker:DescribeExperiment'
                  - 'sagemaker:DescribeTrial'
                  - 'sagemaker:DescribeTrialComponent'
                  - 'sagemaker:DescribeLineageGroup'
                Resource:
                  - 'arn:aws:sagemaker:*:*:*/*' 
              - Effect: Allow
                Action: #domain related permissions
                  - 'sagemaker:ListAssociations'
                  - 'sagemaker:ListActions'
                  - 'sagemaker:ListArtifacts'
                  - 'sagemaker:ListContexts'
                  - 'sagemaker:ListExperiments'
                  - 'sagemaker:ListTrials'
                  - 'sagemaker:ListTrialComponents'
                  - 'sagemaker:ListLineageGroups'
                  - 'sagemaker:GetLineageGroupPolicy'
                  - 'sagemaker:QueryLineage'
                  - 'sagemaker:Search'
                  - 'sagemaker:GetSearchSuggestions'
                Resource: "*" 
        Roles:
          - !Ref DomainExecutionRole              
  NewUserProfile:
    Type: AWS::SageMaker::UserProfile
    Properties:
      DomainId: !Ref SageMakerStudioVPCOnlyDomain
      UserProfileName: NewUserProfile
      UserSettings:
        ExecutionRole: !GetAtt DomainExecutionRole.Arn
Outputs:
  ImportedDomainId:
    Description: The ID of the imported SageMaker Studio Domain
    Value: !Ref ImportedDomain